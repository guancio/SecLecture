%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 402 84
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, October 29, 2015 3:30:26 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
402 84 setpagesize
0 0 0 0 setmargins
0 0 setorigin
402 84 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
402.000 0.00000 l
402.000 84.0000 l
0.00000 84.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
402.000 0.00000 l
402.000 84.0000 l
0.00000 84.0000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 402 84 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -481.000 -234.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
481.000 234.000 m
883.000 234.000 l
883.000 318.000 l
481.000 318.000 l
481.000 234.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -481.000 -234.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -481.000 -234.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -481.000 -234.000 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 68.0000 0.00000 0.00000 46.0000 482.397 242.215 ] concat
<<
/ImageType 1
/Width 68  /Height 46
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [68 0 0 46 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ:/c\9A!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXqVaP/bhaM*=l3u6Rm:E_cW]c
&JakO+`,gF[2#ans*@F]2@>Jc!D&&cemE,A.I@p&1Bc8%hchn4O!0'g89!XW3H\?_eHCVU5RbHG]Pg@m
@pshB@D%B`7r(TiIHdkhDBe",h5'_?$9;gKOJI!>a7<b=AOlc)`T(4mc0T<=Z9lQF8#oNK-n?1rkh"Y5
O5P2lq2C^.%A9?cUgNR8C'N&+JBNL[J^?Hd1/A]FGNA:61Ut:t.j%[1rnJfX[7F7deY<Aq]$KA(`-Y-Y
B;KS@be=`7p?gW;B.+I;D)R<F;e49GK4\.Es5_$tYT9X_odYIE=b4]uX!0koK:Q?7_2-sM_(k(`]C9@1
=6iMLEr2HSie.;Jgan\c5csLJhV-3b_1.egBRe;^KrrC-BVZ-YJ&RJ)`?DQKLlQplW!/Fs/D\#r;+9Bn
5#gREpGj:BZO"7coJYtJKF"8/N;+5cnTP*Q$Lp;R<6(.`9o_5O5e=uI:rToaD;karrW0@]$c`LI%]O*5
$K]Zf^iQ@7[JV/mlC8QARVlWXC)??XVm<!IarrCsFrk1ZU>,Ab2Bq@)*!NlFKlWQOBP:-:uDpkT@C)2$
B$"ep$^hjor31pNZ?^$%aF8l5I,Q@b$Wukg%rrD<Drr2otp$0#SVZ-YB$3("oZ!+3f<)j%BF+K?BTF-0
Xf)Ga7j8T&X!;5Zhn:nK%BVOB`7M4\jlp:Q!`jmbt8X'-u\*6E\,g$&d4BqHN%rML]#WW.'($E.5NFi+
6fPS::N`A_1#T+P1Zqq#-f`~>
Q
q
[ 36.0000 0.00000 0.00000 59.0000 810.105 235.850 ] concat
<<
/ImageType 1
/Width 36  /Height 59
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [36 0 0 59 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb!TVa\UGg'Z^)`FOt*u9q'ZN2[47g&.fC@6m`d>-CJBU&J;9-$OS(VWC<&[VPVgb;DAY9`cQ',>kCfG
EV]IQqhC=/IeV\UdD2L6Y^gf/msO"UpC*C54T=KfRn&M\rOJ5=q=<YEp[@"QHcPT)XZ^"'Gk((LX*"sT
%j!iXrquS\B$YuI>(<U]OF-irl0mp>jSl>d:S']ED-_\Cj2[5LLN2_8[Bd*DoFF9+DXOK&Vj<[9'act.
mKG:+48\,0j64mcMMBp/b0$mg1c7.=]N/3>R\Cu"nDV8l!]YGoT_Q-Cn"-,BSkHrnldrUah_&gu(-?g4
jBO/q4$-/3d?$_23In-0.ZkM`(OpOWS@nOfor]*1='(<QBZQn?Er`*1K+Bao1\.u][!2o078Pi%(fNX&
:g$pMo(P>0<R^LO9M<d[@SGSe^pKDnQ:U&_d*UahLKdtea2c6*9MJ7'gYCT.T*l#7a,V0UBP9AFiWNdC
fL<#pBR-on.Olo9^2rJ_l-lQRbKIF7+uD29cHjho\8fEn+A`L9jW,0T^g^K)L)/7URr)P:I*[h5%dpp/
X,H]<mHs!@PEV4$dM`\^lKSZ3hqpXX3-aN*&M2KgMM<,<m*.FB/b28@Lka(An8MT9gP$"O-71)#jWG*g
U4lEn!a)ZS?T3"=/HnDf7)!s<-<8[Rh9C'RE+EJ^$faldN;Q7>gY:IC92A=orIkEe>rP$/d;_5J-DANP
5)bJ\a\0Hp$.q[C1uoJos/@m=_s$<_os0p74^!\X6#/1Te!fgco&\'c*]eDa9>GGA,qq@q!]Y/WJB6Nb
LkCU%0?Qr4E5m_.b*=L0XgGmG>IVuU/ca@pGoI`n5C["rg=f`Q0B/fBZ&>8ga>'[.%A:)8<91)]YI[p#
cCL0.VP]).+7UC:IN5s*MFM/T*e\"4IH+`8rr"%),$0[ja\.[N-mIN^^-8%XMM<*b</,*_M-;'j(1lE=
SN1a\?Ig*e*q;!fD#IL%deIr7&>`/O,h'>Hl&r*dKTqhR_sKk)9Ggu*ZO*SHLOJ)rn(G$;ABM^<@PGsJ
-mN460@Rg.giNV=OiF'po()?>5(!")X$o1mb:(gt8Ho:A7bgrE.Z(tAG\2cU)-nib-8-rH`Ze_IJrPB(
"DC]]3"Q'#4H[/m=,X)EQSp+!&MHp;CX7h?OJ<$V"#)=9<>uR[0/"Wi.3`)!Vj5hX!m$MD^&W1oE^Y**
7p2"aUniZB7(hkelo#1NEhos!JF)W=Okl1$QK6l2D]bm5GhHZ\D%m!2d-:qQ[+mE81jSi`h957!05DJQ
Z53=t/*dOMf</C']2oMf:rup@<((9KMqpi'P6X+NX>>C.X=TK*=-E`5rY61aU)!3mL#"r</MIC>ZM"8R
1G_JfnA1\K"U,'9!d5.iNA&VC[0C#BD*HTn,!S<L9>E03U*7RB[03^Tk>%/Q?<crY1,$I5SGkpIAaS?.
OHGYKEha/R$>Fc=_+'"3YBMo34*Ks%\_[Qq)77&C@&$!7OQ22WAHL>\otaZ5Xl1R.b:"9LCrX$dlp!uu
Ck2[-XgA;-Y:(-u<NKaGNEY=u;A6jSD;.J@#al0=Zr05T>f99V=_T<'E\.0h!4He$.PaM5[>Km#je[VY
\VQT)>A5N):EB.:70$Q#C_<(lmH2d8!ib>Vr)AbI])kF],1qNZ!LOX$[*jMb"]EV4Pc'*AgD)+T+'Et,
Rp5^DI`Cf);7_YWoQ64@j>8s&(BRs#mi6&EjKp<REqfS/oND)*qml\"B-jV2]QphXL2$roda5Laa;j,O
p2NMgcIFCN79Wl`aI>))b"2b')`MZ!2\q>!M%Ke)llmhr=WJB^D=5]RTDI-?_Gus=paR!o-U^M6.iNGE
(:V9dCW;D9RC'Q%%eIQ1`AVPbn6mf:S]m0kKgP+uldr]5!k)`(*p4h7pLUNG-mWEngUD,$"oU7FL]~>
Q
0 J
1.45000 M
newpath
776.832 304.727 m
777.910 304.727 l
779.270 309.852 l
780.598 304.727 l
781.879 304.727 l
783.223 309.852 l
784.566 304.727 l
785.645 304.727 l
783.926 311.289 l
782.660 311.289 l
781.238 305.914 l
779.832 311.289 l
778.551 311.289 l
776.832 304.727 l
h
786.646 304.727 m
787.725 304.727 l
789.084 309.852 l
790.412 304.727 l
791.693 304.727 l
793.037 309.852 l
794.381 304.727 l
795.459 304.727 l
793.740 311.289 l
792.475 311.289 l
791.053 305.914 l
789.646 311.289 l
788.365 311.289 l
786.646 304.727 l
h
796.461 304.727 m
797.539 304.727 l
798.898 309.852 l
800.227 304.727 l
801.508 304.727 l
802.852 309.852 l
804.195 304.727 l
805.273 304.727 l
803.555 311.289 l
802.289 311.289 l
800.867 305.914 l
799.461 311.289 l
798.180 311.289 l
796.461 304.727 l
h
807.057 309.805 m
808.291 309.805 l
808.291 311.289 l
807.057 311.289 l
807.057 309.805 l
h
815.043 307.930 m
815.043 307.149 814.882 306.544 814.559 306.117  c
814.236 305.690 813.783 305.477 813.199 305.477  c
812.626 305.477 812.178 305.690 811.855 306.117  c
811.533 306.544 811.371 307.149 811.371 307.930  c
811.371 308.711 811.533 309.315 811.855 309.742  c
812.178 310.169 812.626 310.383 813.199 310.383  c
813.783 310.383 814.236 310.169 814.559 309.742  c
814.882 309.315 815.043 308.711 815.043 307.930  c
h
816.121 310.477 m
816.121 311.591 815.874 312.422 815.379 312.969  c
814.884 313.516 814.121 313.789 813.090 313.789  c
812.715 313.789 812.358 313.761 812.020 313.703  c
811.681 313.646 811.355 313.560 811.043 313.445  c
811.043 312.399 l
811.355 312.565 811.668 312.690 811.980 312.774  c
812.293 312.857 812.605 312.899 812.918 312.899  c
813.626 312.899 814.158 312.714 814.512 312.344  c
814.866 311.974 815.043 311.414 815.043 310.664  c
815.043 310.133 l
814.814 310.518 814.527 310.807 814.184 311.000  c
813.840 311.193 813.423 311.289 812.934 311.289  c
812.132 311.289 811.483 310.982 810.988 310.367  c
810.493 309.753 810.246 308.940 810.246 307.930  c
810.246 306.919 810.493 306.107 810.988 305.492  c
811.483 304.878 812.132 304.570 812.934 304.570  c
813.423 304.570 813.840 304.667 814.184 304.859  c
814.527 305.052 814.814 305.341 815.043 305.727  c
815.043 304.727 l
816.121 304.727 l
816.121 310.477 l
h
820.879 305.477 m
820.306 305.477 819.850 305.703 819.512 306.156  c
819.173 306.609 819.004 307.227 819.004 308.008  c
819.004 308.800 819.171 309.419 819.504 309.867  c
819.837 310.315 820.296 310.539 820.879 310.539  c
821.452 310.539 821.908 310.313 822.246 309.859  c
822.585 309.406 822.754 308.789 822.754 308.008  c
822.754 307.237 822.585 306.623 822.246 306.164  c
821.908 305.706 821.452 305.477 820.879 305.477  c
h
820.879 304.570 m
821.816 304.570 822.553 304.875 823.090 305.484  c
823.626 306.094 823.895 306.935 823.895 308.008  c
823.895 309.081 823.626 309.925 823.090 310.539  c
822.553 311.154 821.816 311.461 820.879 311.461  c
819.941 311.461 819.204 311.154 818.668 310.539  c
818.132 309.925 817.863 309.081 817.863 308.008  c
817.863 306.935 818.132 306.094 818.668 305.484  c
819.204 304.875 819.941 304.570 820.879 304.570  c
h
828.221 305.477 m
827.648 305.477 827.192 305.703 826.854 306.156  c
826.515 306.609 826.346 307.227 826.346 308.008  c
826.346 308.800 826.512 309.419 826.846 309.867  c
827.179 310.315 827.637 310.539 828.221 310.539  c
828.794 310.539 829.249 310.313 829.588 309.859  c
829.926 309.406 830.096 308.789 830.096 308.008  c
830.096 307.237 829.926 306.623 829.588 306.164  c
829.249 305.706 828.794 305.477 828.221 305.477  c
h
828.221 304.570 m
829.158 304.570 829.895 304.875 830.432 305.484  c
830.968 306.094 831.236 306.935 831.236 308.008  c
831.236 309.081 830.968 309.925 830.432 310.539  c
829.895 311.154 829.158 311.461 828.221 311.461  c
827.283 311.461 826.546 311.154 826.010 310.539  c
825.473 309.925 825.205 309.081 825.205 308.008  c
825.205 306.935 825.473 306.094 826.010 305.484  c
826.546 304.875 827.283 304.570 828.221 304.570  c
h
837.344 307.930 m
837.344 307.149 837.182 306.544 836.859 306.117  c
836.536 305.690 836.083 305.477 835.500 305.477  c
834.927 305.477 834.479 305.690 834.156 306.117  c
833.833 306.544 833.672 307.149 833.672 307.930  c
833.672 308.711 833.833 309.315 834.156 309.742  c
834.479 310.169 834.927 310.383 835.500 310.383  c
836.083 310.383 836.536 310.169 836.859 309.742  c
837.182 309.315 837.344 308.711 837.344 307.930  c
h
838.422 310.477 m
838.422 311.591 838.174 312.422 837.680 312.969  c
837.185 313.516 836.422 313.789 835.391 313.789  c
835.016 313.789 834.659 313.761 834.320 313.703  c
833.982 313.646 833.656 313.560 833.344 313.445  c
833.344 312.399 l
833.656 312.565 833.969 312.690 834.281 312.774  c
834.594 312.857 834.906 312.899 835.219 312.899  c
835.927 312.899 836.458 312.714 836.812 312.344  c
837.167 311.974 837.344 311.414 837.344 310.664  c
837.344 310.133 l
837.115 310.518 836.828 310.807 836.484 311.000  c
836.141 311.193 835.724 311.289 835.234 311.289  c
834.432 311.289 833.784 310.982 833.289 310.367  c
832.794 309.753 832.547 308.940 832.547 307.930  c
832.547 306.919 832.794 306.107 833.289 305.492  c
833.784 304.878 834.432 304.570 835.234 304.570  c
835.724 304.570 836.141 304.667 836.484 304.859  c
836.828 305.052 837.115 305.341 837.344 305.727  c
837.344 304.727 l
838.422 304.727 l
838.422 310.477 l
h
840.633 302.164 m
841.711 302.164 l
841.711 311.289 l
840.633 311.289 l
840.633 302.164 l
h
849.592 307.742 m
849.592 308.258 l
844.623 308.258 l
844.675 309.008 844.902 309.576 845.303 309.961  c
845.704 310.346 846.258 310.539 846.967 310.539  c
847.383 310.539 847.787 310.490 848.178 310.391  c
848.568 310.292 848.956 310.138 849.342 309.930  c
849.342 310.961 l
848.946 311.117 848.545 311.240 848.139 311.328  c
847.732 311.417 847.321 311.461 846.904 311.461  c
845.863 311.461 845.035 311.156 844.420 310.547  c
843.805 309.938 843.498 309.112 843.498 308.070  c
843.498 306.998 843.790 306.146 844.373 305.516  c
844.956 304.886 845.738 304.570 846.717 304.570  c
847.602 304.570 848.303 304.854 848.818 305.422  c
849.334 305.990 849.592 306.763 849.592 307.742  c
h
848.514 307.414 m
848.503 306.831 848.337 306.362 848.014 306.008  c
847.691 305.654 847.264 305.477 846.732 305.477  c
846.128 305.477 845.646 305.649 845.287 305.992  c
844.928 306.336 844.722 306.815 844.670 307.430  c
848.514 307.414 l
h
851.506 309.805 m
852.740 309.805 l
852.740 311.289 l
851.506 311.289 l
851.506 309.805 l
h
859.898 304.977 m
859.898 305.992 l
859.586 305.815 859.279 305.685 858.977 305.602  c
858.674 305.518 858.367 305.477 858.055 305.477  c
857.346 305.477 856.799 305.698 856.414 306.141  c
856.029 306.583 855.836 307.206 855.836 308.008  c
855.836 308.810 856.029 309.432 856.414 309.875  c
856.799 310.318 857.346 310.539 858.055 310.539  c
858.367 310.539 858.674 310.498 858.977 310.414  c
859.279 310.331 859.586 310.206 859.898 310.039  c
859.898 311.039 l
859.596 311.175 859.284 311.279 858.961 311.352  c
858.638 311.425 858.294 311.461 857.930 311.461  c
856.940 311.461 856.154 311.151 855.570 310.531  c
854.987 309.912 854.695 309.070 854.695 308.008  c
854.695 306.945 854.990 306.107 855.578 305.492  c
856.167 304.878 856.977 304.570 858.008 304.570  c
858.331 304.570 858.651 304.604 858.969 304.672  c
859.286 304.740 859.596 304.841 859.898 304.977  c
h
864.309 305.477 m
863.736 305.477 863.280 305.703 862.941 306.156  c
862.603 306.609 862.434 307.227 862.434 308.008  c
862.434 308.800 862.600 309.419 862.934 309.867  c
863.267 310.315 863.725 310.539 864.309 310.539  c
864.882 310.539 865.337 310.313 865.676 309.859  c
866.014 309.406 866.184 308.789 866.184 308.008  c
866.184 307.237 866.014 306.623 865.676 306.164  c
865.337 305.706 864.882 305.477 864.309 305.477  c
h
864.309 304.570 m
865.246 304.570 865.983 304.875 866.520 305.484  c
867.056 306.094 867.324 306.935 867.324 308.008  c
867.324 309.081 867.056 309.925 866.520 310.539  c
865.983 311.154 865.246 311.461 864.309 311.461  c
863.371 311.461 862.634 311.154 862.098 310.539  c
861.561 309.925 861.293 309.081 861.293 308.008  c
861.293 306.935 861.561 306.094 862.098 305.484  c
862.634 304.875 863.371 304.570 864.309 304.570  c
h
874.213 305.992 m
874.484 305.503 874.807 305.143 875.182 304.914  c
875.557 304.685 875.999 304.570 876.510 304.570  c
877.197 304.570 877.726 304.810 878.096 305.289  c
878.465 305.768 878.650 306.445 878.650 307.320  c
878.650 311.289 l
877.572 311.289 l
877.572 307.367 l
877.572 306.732 877.460 306.263 877.236 305.961  c
877.012 305.659 876.671 305.508 876.213 305.508  c
875.650 305.508 875.208 305.693 874.885 306.063  c
874.562 306.432 874.400 306.940 874.400 307.586  c
874.400 311.289 l
873.322 311.289 l
873.322 307.367 l
873.322 306.732 873.210 306.263 872.986 305.961  c
872.762 305.659 872.416 305.508 871.947 305.508  c
871.395 305.508 870.958 305.693 870.635 306.063  c
870.312 306.432 870.150 306.940 870.150 307.586  c
870.150 311.289 l
869.072 311.289 l
869.072 304.727 l
870.150 304.727 l
870.150 305.742 l
870.400 305.346 870.697 305.052 871.041 304.859  c
871.385 304.667 871.791 304.570 872.260 304.570  c
872.739 304.570 873.145 304.690 873.479 304.930  c
873.812 305.169 874.057 305.524 874.213 305.992  c
h
f
2 J
10.0000 M
q
[ 42.0000 0.00000 0.00000 42.0000 659.140 244.139 ] concat
<<
/ImageType 1
/Width 42  /Height 42
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [42 0 0 42 0 0]
/DataSource currentfile /ASCII85Decode filter /DCTDecode filter 
>> image
s4IA0!"_al8O`[\!WW3$!!*'"s4[N@!!ic5#6k>;#6tJ?#m^kH'FbHY$Odmc'+Yct)BU"@)B9_>,VCGe
+tOrY*%3`p/2/e81c-:%3B]>W4>&EH1B6)/6NIK"#n.1M(_$ok1*IV\1,:U?1,:U?1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,AmF!"fJ:.KCq#!?qLF&HMtG!WU(<*rl9A"T\W)!<E3$
z!!!!"!WrQ/"pYD?$4HmP!4<@<!W`B*!X&T/"U"r.!!.KK!WrE*&Hrdj0gQ!W;.0\RE>10ZOeE%*6F"?
A;UOtZ1LbBV#mqFa(`=5<-7:2j.Ps"@2`NfY6UX@47n?3D;cHat='/U/@q9._B4u!oF*)PJGBeCZK7nr
5LPUeEP*;,qQC!u,R\HRQV5C/hWN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>V&OjQ5OekiqC&o(2M
Hp@n@XqZ"J6*ru?D!<E3%!<E3%!<<*"!!!!"!WrQ/"pYD?$4HmP!4<C=!W`?*"9Sc3"U"r.!<RHF!<N?
8"9fr'"qj4!#@VTc+u4]T'LIqUZ,$_k1K*]W@WKj'(*k`q-1Mcg)&ahL-n-W'2E*TU3^Z;(7Rp!@8lJ\
h<``C+>%;)SAnPdkC3+K>G'A1VH@gd&KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]#)A'`Q#s
>ai`&\eCE.%f\,!<j5f=akNM0qo(2MHp@n@XqZ#7L$j-M1!YGMH!'^JXMn?L#i%iO/?JP4VDLWAVc+E=
#W)6(obhW<go_^3Yi][4!-,#NqgHkYPpH<Nl&Q<BOjP*.a&-Yn,<,n'#!8"CMF<_]=E`[)8WErK$i>6$
aX*`UaM.F,GQjf8\WfMOK;GF7=AJpY6+aAOZ@Oig)^18Z4D%PPb89'e'+3q*e\OJ/h4/iJH,]k*b8uU0
9h%8j2m*@uFot*q5horNJ8Eq]t]S")1;J?%X0p4q-.j-u5rr@E:5HT81F5j-u;tkHJ:):1:%srDDY,E7
U?W)+#A4a*K=CkSCGOumS'ggAI\4On"6?\!8F?09apPtqq1KTV!/:fmNEX)WLUEB9q5E0_XOioE4U)tf
'j<)1piTP(+V%l%*q&WgBiDHd7@p"J2i`Y:M9'7X`HZZ2;TTQ>uc\DqHC?N(@fDI,2e#^-,#!XUoWVi+
\C-,f1Cf@Vfa3Nk@+62`hU[Hd$/T,7/!]t*Cg4@+s_m>E9_>QED,/$=oBk4Q$bXClY:3R1mY:.juqf>a
Q&aib,2IM"Aj;ae@p$;saLo?sM;1Jm[>WCl4.XR`=']1]N)1):=%_5tTO:B*m5)9(9!1muLYC&4/BTk9
,<FQqnV3ED6Z-OMI2=/gn'JX[)\T^O9n;s[G[V(L5ZBEI+Z`HSAq3E4-El6KKIGWYQMbMWCLCdR`:D06
7(<Bj(hsiSi1MM/\SfHBdr6BM8ja#eWiigB@72V%A<(5^pMui]TAP?Tc\jmc')On'G1#Y>(%1Na?"?"Y
g8F>b.ci3uLWM5:AC/gHiF%Gr&du??X`;eK~>
Q
0 J
1.45000 M
newpath
539.788 265.000 m
659.153 265.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
700.849 265.000 m
810.088 265.000 l
S
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
